<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zking.core.mapper.UsrAccountMapper">
  <resultMap id="BaseResultMap" type="com.zking.core.model.UsrAccount">
    <constructor>
      <idArg column="aid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="userid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="totalmoney" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="tradePassword" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="salt" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="usemoney" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="frostmoney" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="haveinterest" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="waitinterest" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="waittotalmoney" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="unReturnAmount" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="remainBorrowLimit" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="borrowLimit" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    aid, userid, totalmoney, tradePassword, salt, usemoney, frostmoney, haveinterest, 
    waitinterest, waittotalmoney, unReturnAmount, remainBorrowLimit, borrowLimit
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_usr_account
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_usr_account
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zking.core.model.UsrAccount">
    insert into t_usr_account (aid, userid, totalmoney, 
      tradePassword, salt, usemoney, 
      frostmoney, haveinterest, waitinterest, 
      waittotalmoney, unReturnAmount, remainBorrowLimit, 
      borrowLimit)
    values (#{aid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{totalmoney,jdbcType=REAL}, 
      #{tradepassword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{usemoney,jdbcType=REAL}, 
      #{frostmoney,jdbcType=REAL}, #{haveinterest,jdbcType=REAL}, #{waitinterest,jdbcType=REAL}, 
      #{waittotalmoney,jdbcType=REAL}, #{unreturnamount,jdbcType=REAL}, #{remainborrowlimit,jdbcType=INTEGER}, 
      #{borrowlimit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.core.model.UsrAccount">
    insert into t_usr_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        aid,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="totalmoney != null">
        totalmoney,
      </if>
      <if test="tradepassword != null">
        tradePassword,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="usemoney != null">
        usemoney,
      </if>
      <if test="frostmoney != null">
        frostmoney,
      </if>
      <if test="haveinterest != null">
        haveinterest,
      </if>
      <if test="waitinterest != null">
        waitinterest,
      </if>
      <if test="waittotalmoney != null">
        waittotalmoney,
      </if>
      <if test="unreturnamount != null">
        unReturnAmount,
      </if>
      <if test="remainborrowlimit != null">
        remainBorrowLimit,
      </if>
      <if test="borrowlimit != null">
        borrowLimit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="totalmoney != null">
        #{totalmoney,jdbcType=REAL},
      </if>
      <if test="tradepassword != null">
        #{tradepassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="usemoney != null">
        #{usemoney,jdbcType=REAL},
      </if>
      <if test="frostmoney != null">
        #{frostmoney,jdbcType=REAL},
      </if>
      <if test="haveinterest != null">
        #{haveinterest,jdbcType=REAL},
      </if>
      <if test="waitinterest != null">
        #{waitinterest,jdbcType=REAL},
      </if>
      <if test="waittotalmoney != null">
        #{waittotalmoney,jdbcType=REAL},
      </if>
      <if test="unreturnamount != null">
        #{unreturnamount,jdbcType=REAL},
      </if>
      <if test="remainborrowlimit != null">
        #{remainborrowlimit,jdbcType=INTEGER},
      </if>
      <if test="borrowlimit != null">
        #{borrowlimit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.core.model.UsrAccount">
    update t_usr_account
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="totalmoney != null">
        totalmoney = #{totalmoney,jdbcType=REAL},
      </if>
      <if test="tradepassword != null">
        tradePassword = #{tradepassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="usemoney != null">
        usemoney = #{usemoney,jdbcType=REAL},
      </if>
      <if test="frostmoney != null">
        frostmoney = #{frostmoney,jdbcType=REAL},
      </if>
      <if test="haveinterest != null">
        haveinterest = #{haveinterest,jdbcType=REAL},
      </if>
      <if test="waitinterest != null">
        waitinterest = #{waitinterest,jdbcType=REAL},
      </if>
      <if test="waittotalmoney != null">
        waittotalmoney = #{waittotalmoney,jdbcType=REAL},
      </if>
      <if test="unreturnamount != null">
        unReturnAmount = #{unreturnamount,jdbcType=REAL},
      </if>
      <if test="remainborrowlimit != null">
        remainBorrowLimit = #{remainborrowlimit,jdbcType=INTEGER},
      </if>
      <if test="borrowlimit != null">
        borrowLimit = #{borrowlimit,jdbcType=INTEGER},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.core.model.UsrAccount">
    update t_usr_account
    set userid = #{userid,jdbcType=INTEGER},
      totalmoney = #{totalmoney,jdbcType=REAL},
      tradePassword = #{tradepassword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      usemoney = #{usemoney,jdbcType=REAL},
      frostmoney = #{frostmoney,jdbcType=REAL},
      haveinterest = #{haveinterest,jdbcType=REAL},
      waitinterest = #{waitinterest,jdbcType=REAL},
      waittotalmoney = #{waittotalmoney,jdbcType=REAL},
      unReturnAmount = #{unreturnamount,jdbcType=REAL},
      remainBorrowLimit = #{remainborrowlimit,jdbcType=INTEGER},
      borrowLimit = #{borrowlimit,jdbcType=INTEGER}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
</mapper>